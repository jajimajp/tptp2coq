(* Generated by tptp2coqp *)
Require Import SMTCoq.SMTCoq ZArith.
Local Open Scope Z_scope.

(* axioms *)
Variable ld : Z -> Z -> Z.
Variable mult : Z -> Z -> Z.
Variable op_c : Z.
Variable op_d : Z.
Variable op_e : Z.
Variable op_f : Z.
Variable rd : Z -> Z -> Z.
Variable unit : Z.
Axiom f13 : forall A B : Z, op_f = (mult A (mult B (ld (mult A B) op_c))).
Axiom f12 : forall A B : Z, op_e = (mult (mult (rd op_c (mult A B)) B) A).
Axiom f11 : forall A : Z, op_d = (ld A (mult op_c A)).
Axiom f10 : forall A B : Z, (mult A (mult op_c B)) = (mult (mult A op_c) B).
Axiom f09 : forall A B : Z, (mult A (mult B op_c)) = (mult (mult A B) op_c).
Axiom f08 : forall A B : Z, (mult op_c (mult A B)) = (mult (mult op_c A) B).
Axiom f07 : forall A B C : Z, (mult A (mult B (mult B C))) = (mult (mult (mult A B) B) C).
Axiom f06 : forall A : Z, (mult unit A) = A.
Axiom f05 : forall A : Z, (mult A unit) = A.
Axiom f04 : forall A B : Z, (rd (mult A B) B) = A.
Axiom f03 : forall A B : Z, (mult (rd A B) B) = A.
Axiom f02 : forall A B : Z, (ld A (mult A B)) = B.
Axiom f01 : forall A B : Z, (mult A (ld A B)) = B.

Add_lemmas f13 f12 f11 f10 f09 f08 f07 f06 f05 f04 f03 f02 f01.

(* Goal *)
Theorem check : (mult x4 (mult x5 op_f)) = (mult (mult x4 x5) op_f).
Proof.
  smt.
Qed.

Check check.

