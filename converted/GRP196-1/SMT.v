(* Generated by tptp2coqp *)
Require Import SMTCoq.SMTCoq ZArith.
Local Open Scope Z_scope.

(* axioms *)
Variable multiply : Z -> Z -> Z.
Axiom condition : forall X Y : Z, (multiply X (multiply Y (multiply Y Y))) = (multiply Y (multiply Y (multiply Y X))).
Axiom associativity_of_multiply : forall X Y Z : Z, (multiply (multiply X Y) Z) = (multiply X (multiply Y Z)).

Add_lemmas condition associativity_of_multiply.

(* Goal *)
Theorem check : (multiply a (multiply b (multiply a (multiply b (multiply a (multiply b (multiply a (multiply b (multiply a (multiply b (multiply a (multiply b (multiply a (multiply b (multiply a (multiply b (multiply a b))))))))))))))))) = (multiply a (multiply a (multiply a (multiply a (multiply a (multiply a (multiply a (multiply a (multiply a (multiply b (multiply b (multiply b (multiply b (multiply b (multiply b (multiply b (multiply b b))))))))))))))))).
Proof.
  smt.
Qed.

Check check.

